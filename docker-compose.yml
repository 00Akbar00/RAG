services:
  app:
    container_name: discord_app
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    image: laravel_app:latest
    volumes:
      - ./laravel-app:/var/www/html
    env_file:
      - ./laravel-app/.env
    depends_on:
      - db
      - kafka
    networks:
      - laravel

  web:
    container_name: laravel_nginx
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./laravel-app:/var/www/html:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - laravel

  db:
    container_name: discord_db
    image: mysql:8.0
    ports:
      - "3306:3306"
    env_file:
      - ./laravel-app/.env
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - laravel

  adminer:
    container_name: discord_adminer
    image: adminer:latest
    restart: always
    ports:
      - "8080:8080"
    networks:
      - laravel

  zookeeper:
    container_name: kafka_zookeeper
    image: confluentinc/cp-zookeeper:7.5.3
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - laravel

  kafka:
    container_name: kafka_broker
    image: confluentinc/cp-kafka:7.5.3
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    env_file:
      - ./kafka-service/.env
    networks:
      - laravel

  kafka_node:
    container_name: kafka_node
    build:
      context: ./kafka-service
      dockerfile: ../docker/node/Dockerfile
    volumes:
      - ./kafka-service:/app
    env_file:
      - ./kafka-service/.env
    depends_on:
      - kafka
    networks:
      - laravel

  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/js/Dockerfile
    container_name: discord_frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost/api  
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - laravel
      - frontend_network

volumes:
  db_data:

networks:
  laravel:
    driver: bridge
  frontend_network:
    driver: bridge
